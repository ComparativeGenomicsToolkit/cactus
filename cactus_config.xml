<!-- This XML tree contains the parameters to cactus_workflow.py -->
<cactusWorkflowConfig>
	<constants defaultMemory="mediumMemory" defaultOverlargeMemory="mediumMemory" defaultCpu="1" defaultOverlargeCpu="1">
		<!-- These constants are used to control the amount of memory and cpu the different jobs in a batch are using. -->
  		<defines littleMemory="1147483648" mediumMemory="2589934592" bigMemory="3037418200"/>
  		<!-- These constants are used to control parameters that depend on phylogenetic distance. -->
  		<divergences low="0.1"/>
  	</constants>
	<!-- The preprocessor tags are used to modify/check the input sequences before alignment -->
	<!-- The first preprocessor tag checks that the first word of every fasta header is unique, as this is required for HAL. It throws errors if this is not the case -->
	<!-- The checkAssemblyHub option (if enabled) ensures that the first word contains only alphanumeric or '_', '-', ':', or '.' characters, and is unique. If you don't intend to make an assembly hub, you can turn off this option here. -->
	<preprocessor check="1" memory="littleMemory" preprocessorString="cactus_checkUniqueHeaders.py --checkAssemblyHub IN_FILE"/>
	<!-- The preprocessor for cactus_lastzRepeatMask masks every seed that is part of more than XX other alignments, this stops a combinatorial explosion in pairwise alignments -->
	<preprocessor chunkSize="3000000" proportionToSample="0.2" memory="littleMemory" preprocessorString="cactus_lastzRepeatMask.py --proportionSampled=PROPORTION_SAMPLED --tempDir=TEMP_DIR --minPeriod=50 --lastzOpts='--step=3 --ambiguous=iupac,100,100 --ungapped --queryhsplimit=keep,nowarn:1500' IN_FILE OUT_FILE "/>
        <!-- Options for trimming ingroups & outgroups using the trim strategy -->
        <!-- Ingroup trim options: -->
        <!-- trimFlanking: The length of flanking sequence to attach
             to the trimmed ingroup sequences -->
        <!-- trimMinSize: The minimum size of uncovered regions
             (*before* adding flanking sequence) to output from the
             trimming process -->
        <!-- trimThreshold: The minimum amount of coverage for a
             region to be trimmed away and not be aligned against the
             next outgroup -->
        <!-- trimWindowSize: The size of the window to integrate
             coverage over -->
        <!-- Outgroup trim options: -->
        <!-- trimOutgroupFlanking: The amount of flanking sequence to
             leave on the ends of the trimmed outgroup fragments -->
        <trimBlast doTrimStrategy="0"
                   trimFlanking="10"
                   trimMinSize="10"
                   trimThreshold="1"
                   trimWindowSize="10"
                   trimOutgroupFlanking="100"/>
	<setup makeEventHeadersAlphaNumeric="0"/>
	<caf
		realign="1"
		realignArguments="--rescoreByIdentity --gapGamma 0.9 --diagonalExpansion 4 --splitMatrixBiggerThanThis 10 --constraintDiagonalTrim 0 --alignAmbiguityCharacters"
		chunkSize="2000000" 
		compressFiles="1" 
		overlapSize="10000" 
		filterByIdentity="1" 
		identityRatio="6" 
		minimumDistance="0.01" 
		minimumSequenceLengthForBlast="30"
		annealingRounds="2 3 4 8 16 32 64 128" 
		deannealingRounds="2 3 4 8 16 32 64 128" 
		blockTrim="2" 
		minimumTreeCoverage="0.8" 
		trim="0 0 0 0 0 0 0 0 0 0 0"
		minimumBlockDegree="2"
		maxAdjacencyComponentSizeRatio="10"
		minLengthForChromosome="1000000"
		proportionOfUnalignedBasesForNewChromosome="0.8"
		maximumMedianSequenceLengthBetweenLinkedEnds="10000"
		lastzMemory="littleMemory"
	>
		<divergence 
			argName="lastzArguments"
			low="--hspthresh=3000 --identity=IDENTITY --ambiguous=iupac"
		 	default="--hspthresh=1800 --identity=IDENTITY --ambiguous=iupac"
		 />
		<CactusCafRecursion maxFlowerGroupSize="100000000"/>
		<CactusCafWrapper minFlowerSize="5000" maxFlowerGroupSize="1000000"/>
	</caf>
	<bar
		runBar="1"
		spanningTrees="5" 
		gapGamma="0.2" 
		bandingLimit="100000" 
		splitMatrixBiggerThanThis="3000" 
        anchorMatrixBiggerThanThis="500"
        repeatMaskMatrixBiggerThanThis="500"
        diagonalExpansion="20"
		constraintDiagonalTrim="14" 
		minimumBlockDegree="0" 
		alignAmbiguityCharacters="1"
		veryLargeEndSize="50000"
		largeEndSize="10000"
		maximumNumberOfSequencesBeforeSwitchingToFast="50"
		pruneOutStubAlignments="1"
	>
		<CactusBarRecursion maxFlowerGroupSize="100000000"/>
		<CactusBarWrapper maxFlowerGroupSize="400000" memory="littleMemory"/>
		<CactusBarWrapperLarge maxFlowerGroupSize="400000"/>
		<CactusBarEndAlignerWrapper memory="littleMemory"/>
	</bar>
	<normal 
		iterations="2"
		maxNumberOfChains="30" 
	>
		<CactusNormalRecursion maxFlowerGroupSize="100000000" maxFlowerWrapperGroupSize="1000000"/>
		<CactusNormalWrapper/>
	</normal>
	<avg
		buildAvgs="1"
	>
		<CactusAVGRecursion maxFlowerGroupSize="100000000" maxFlowerWrapperGroupSize="1000000"/>
		<CactusAVGWrapper/>
	</avg>
	<reference 
		buildReference="0"
		matchingAlgorithm="blossom5" 
		reference="reference" 
		useSimulatedAnnealing="1" 
		theta="0.0001" 
		maxWalkForCalculatingZ="100000" 
		permutations="10"
		ignoreUnalignedGaps="1"
		wiggle="0.9999"
	>
		<CactusReferenceRecursion maxFlowerGroupSize="100000000" maxFlowerWrapperGroupSize="1000000"/>
	 	<CactusReferenceWrapper/>
	 	<CactusSetReferenceCoordinatesUpWrapper />
	 	<CactusSetReferenceCoordinatesDownRecursion maxFlowerGroupSize="100000000" maxFlowerWrapperGroupSize="1000000"/>
	 	<CactusSetReferenceCoordinatesDownWrapper/>
	</reference>
	<check 
		runCheck="1"
		maxFlowerGroupSize="1000000"
	>
		<CactusCheckRecursion maxFlowerGroupSize="100000000" maxFlowerWrapperGroupSize="1000000"/>
		<CactusCheckWrapper/>
	</check>
	<hal
		buildHal="0"
		buildMaf="0"
		buildFasta="0"
		joinMaf="1"
		showOnlySubstitutionsWithRespectToReference="0"
	>
		<CactusHalGeneratorRecursion maxFlowerGroupSize="10000000"/>
		<CactusHalGeneratorUpWrapper/>
	</hal>
</cactusWorkflowConfig>
